{"version":3,"sources":["components/Coin.jsx","App.js","index.js"],"names":["Coin","useState","coins","setCoins","search","setSearch","useEffect","getData","a","axios","get","data","numberWithCommas","x","toString","replace","filtros","filter","item","name","toLowerCase","includes","symbol","className","type","placeholder","autoFocus","onChange","e","target","value","map","src","image","alt","style","width","height","current_price","price_change_percentage_24h","Math","round","total_volume","market_cap","low_24h","high_24h","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA6EeA,EA1EK,WAEhB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACNC,MACD,IAEH,IAAMA,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,IAAMC,IAAI,4HADnB,gBACLC,EADK,EACLA,KAGPR,EAASQ,GAJG,2CAAH,qDAOPC,EAAmB,SAACC,GACtB,GAAiB,qBAANA,EAAmB,OAAOA,EAAEC,WAAWC,QAAQ,wBAAyB,MAKjFC,EAAUd,EAAMe,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,cAAcC,SAASjB,EAAOgB,gBAAkBF,EAAKI,OAAOF,cAAcC,SAASjB,EAAOgB,kBAEzI,OACI,sBAAKG,UAAU,YAAf,UACI,oBAAIA,UAAU,2BAAd,2BACA,oBAAIA,UAAU,mBAAd,uEACA,qBAAKA,UAAU,wDAAf,SACI,qBAAKA,UAAU,QAAf,SACI,+BACK,qBAAKA,UAAU,OAAf,SACI,uBAAOC,KAAK,OAAOC,YAAY,SAASF,UAAU,eAAeG,WAAS,EAACC,SAAY,SAAAC,GAAC,OAAIvB,EAAUuB,EAAEC,OAAOC,kBAMhI,wBAAOP,UAAU,QAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,sCACA,wCACA,yCACA,wCACA,6CACA,yCACA,mDACA,2CACA,gDAGR,gCACKP,EAAQe,KAAI,SAAAb,GAAI,OACb,+BACI,6BACI,qBAAKc,IAAKd,EAAKe,MAAOC,IAAI,MAAMX,UAAU,YAAYY,MAAS,CAACC,MAAO,OAAQC,OAAQ,YAE3F,6BAAKnB,EAAKC,OACV,6BAAKD,EAAKI,SACV,6BAAKJ,EAAKoB,gBACV,qBAAIf,UAAaL,EAAKqB,4BAA8B,EAAI,cAAgB,eAAxE,UAAyFC,KAAKC,MAAuC,IAAjCvB,EAAKqB,6BAAiC,IAAK,OAC/I,6BAAK3B,EAAiBM,EAAKwB,gBAC3B,6BAAK9B,EAAiBM,EAAKyB,cAC3B,6BAAKzB,EAAK0B,UACV,6BAAK1B,EAAK2B,aAXL3B,EAAK4B,gBC9CvBC,MARf,WACE,OACE,qBAAKxB,UAAU,MAAf,SACE,cAAC,EAAD,OCDNyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2d376c54.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const Coin = () => {\n\n    const [coins, setCoins] = useState([]);\n    const [search, setSearch] = useState('');\n\n    useEffect(() => {\n        getData();\n    }, []);\n    \n    const getData = async() => {\n        const {data} = await axios.get('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=250&page=1&sparkline=false');\n\n\n        setCoins(data);\n    };\n\n    const numberWithCommas = (x) => {\n        if (typeof x !== 'undefined'){return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        };\n    };\n\n\n    const filtros = coins.filter(item => item.name.toLowerCase().includes(search.toLowerCase()) || item.symbol.toLowerCase().includes(search.toLowerCase()))\n\n    return (\n        <div className='container'>\n            <h1 className='text-center fw-bold mt-2'>CRIPTO-MARKET</h1>\n            <h6 className='text-center mt-2'>La información que necesitas para operar en el mercado</h6>\n            <div className=\"mt-5 d-flex justify-content-center align-items-center\">\n                <div className=\"col-6\">\n                    <form>\n                         <div className=\"mb-3\">\n                             <input type=\"text\" placeholder='SEARCH' className='form-control' autoFocus onChange = {e => setSearch(e.target.value)}/>\n                         </div>\n                    </form>\n                </div>\n            </div>\n\n            <table className='table'>\n                <thead className='table-dark'>\n                    <tr>\n                        <th>Logo</th>\n                        <th>Nombre</th>\n                        <th>Simbolo</th>\n                        <th>Precio</th>\n                        <th>Rendimiento</th>\n                        <th>Volumen</th>\n                        <th>Capitalización</th>\n                        <th>Mínimo</th>\n                        <th>Máximo</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {filtros.map(item => (\n                        <tr key={item.id}>\n                            <td>\n                                <img src={item.image} alt=\"img\" className='img-fluid' style = {{width: '20px', height: '20px'}}/>\n                            </td>\n                            <td>{item.name}</td>\n                            <td>{item.symbol}</td>\n                            <td>{item.current_price}</td>\n                            <td className = {item.price_change_percentage_24h < 0 ? 'text-danger' : 'text-success'}>{Math.round(item.price_change_percentage_24h*100)/100}{'%'}</td>\n                            <td>{numberWithCommas(item.total_volume)}</td>\n                            <td>{numberWithCommas(item.market_cap)}</td>\n                            <td>{item.low_24h}</td>\n                            <td>{item.high_24h}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default Coin\n\n\n","import Coin from \"./components/Coin\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Coin/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}